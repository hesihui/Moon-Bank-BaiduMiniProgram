/**
 * @file 筛选面板-多选组件
 * @author zhangwen22(zhangwen22@baidu.com)
 */
import {COLOR_TIPS} from '../../../common/style/color';
import {upx2rpx} from '../../../common/utils/px';
 /* global Component */
Component({
    externalClasses: [ // eslint-disable-line
        'filter-checkbox-group-class',
        'checkbox-group-class',
        'check-box-class'
    ],
    properties: {
        // 传入value
        value: {
            type: Array,
            value: []
        },
        // 是否为不可点击
        disabled: {
            type: Boolean,
            value: false
        },
        // checkbox内联样式
        itemStyle: {
            type: Object,
            value: {}
        },
        // icon样式
        iconStyle: {
            type: Object,
            value: {}
        },
        optionKey: {
            type: String,
            value: 'name'
        },
        // 是否为两列分布
        column: {
            type: Number,
            value: 1
        },
        // 选中时的文字颜色
        activeTextColor: {
            type: String,
            value: COLOR_TIPS
        },
        // 选中时的icon颜色
        activeIconColor: {
            type: String,
            value: COLOR_TIPS
        },
        // 选中时的背景颜色
        activeBgColor: {
            type: String,
            value: ''
        }
    },

    data: {
        // 初始化value数组
        currentValue: [],
        currentItemStyle: {
            width: upx2rpx(346) + 'rpx'
        }
    },

    created() {
        const {value, column} = this.data;
        this.setData({
            currentValue: value,
            currentItemStyle: {
                width: upx2rpx(column === 3 ? 346 : 531) + 'rpx'
            },
            isLoaded: true
        });
    },

    /**
     * 监听checkbox-groupchange事件
     *
     * @param {Object} event 点击事件对象
     */
    groupChange(event) {
        this.setData({
            currentValue: event.detail
        });
    },

    /**
     * 监听重置操作，重置组件值
     */
    resetHdl() {
        this.setData({
            currentValue: []
        });
    },

    /**
     * 监听确定操作，向父组件派发事件
     */
    ensureHdl() {
        const {options, currentValue} = this.data;
        this.setData({
            lastValue: currentValue
        });
        this.triggerEvent('change', {
            type: 'check-box-group',
            groupValue: options.filter(option => currentValue.includes(option.value)),
            value: currentValue,
            fillback: false
        });
    }
});
