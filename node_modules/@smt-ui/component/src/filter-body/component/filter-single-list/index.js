/**
 * @file filter-single-list组件
 * @author zhangwen22(zhangwen22@baidu.com)
 */
import {COLOR_TIPS, COLOR_BLACK} from '../../../common/style/color';
/* globals Component */
Component({
    externalClasses: [ // eslint-disable-line
        'filter-singlelist-class',
        'filter-singlelist-item-class',
        'filter-singlelist-item-text-class'
    ],
    properties: {
        // 筛选器ID
        options: {
            type: Array,
            value: []
        },
        // 筛选项options数组
        optionKey: {
            type: String,
            value: ''
        },
        value: {
            type: String,
            value: ''
        },
        // 高亮时的文字和icon颜色
        activeColor: {
            type: String,
            value: COLOR_TIPS
        },
        // 默认状态的文字颜色
        fontColor: {
            type: String,
            value: COLOR_BLACK
        }
    },
    /**
     * 点击下拉选择内容项
     * @param {Object} event 点击事件对象
     */
    handleSelect(event) {
        let {value, key, idx} = event.currentTarget.dataset;
        this.selInnerHdl(value, key, idx);
    },

    /**
     * 下拉筛选向父组件(filter-body)派发事件
     *
     * @param {String} value 选择的内容
     * @param {String} text 选择的文案
     * @param {String} index 选择的下标
     * @param {Bollean} fillback 是否回填
     */
    selInnerHdl(value, text, index, fillback = false) {
        this.triggerEvent('change', {
            type: 'singleList',
            index,
            text,
            value,
            fillback
        });
    },

    /**
     * 回填数据
     * @param {String} value 回填的数据
     */
    setValue(value) {
        for (const [idx, opt] of this.data.options.entries()) {
            if (opt.value === value) {
                return this.selInnerHdl(value, opt[this.data.optionKey] || opt, idx, true);
            }
        }
    }
});
