/**
 * 文本折叠组件
 * @author zhangwen22(zhangwen22@baidu.com)
 */
/* global Component, swan */
Component({
    externalClasses: [ // exlint-disable-line
        'text-collapse-class',
        'text-content-class',
        'btn-text-class'
    ],
    properties: {
        // 组件需要展示的文本内容
        text: {
            type: String,
            value: ''
        },
        // 需要展示几行
        line: {
            type: Number,
            value: 3
        },
        // 是否展示 [展开/收起]按钮
        showButton: {
            type: Boolean,
            value: true
        },
        // 按钮文字
        buttonText: {
            type: Array,
            value: ['展开', '收起']
        },
        // 文本内容是否可以选择
        selectable: {
            type: Boolean,
            value: true
        },
        // 组件默认是否展开状态
        expand: {
            type: Boolean,
            value: false,
            observer(value) {
                this.setData({
                    currentExpand: value
                });
            }
        }
    },
    data: {
        // 组件自身expand状态
        currentExpand: false,
        // 是否超出
        ellipsis: false,
        // 初始不显示，避免抖动
        show: false
    },
    created() {
        this.computedEllipsis();
    },

    /**
     * 获取组件行高和文字大小，用于根据用户传入的行数计算是否折叠
     */
    getTextStyle() {
        return new Promise((resolve, reject) => {
            swan.createSelectorQuery().in(this).select('.text-content')
            .fields({
                computedStyle: ['line-height'],
                size: true
            }, res => {
                if (!res) {
                    return reject('未查到节点信息');
                }
                resolve(res);
            }).exec();
        });
    },

    /**
     * 计算组件是折叠或者收起状态
     */
    async computedEllipsis() {
        try {
            const {height, 'line-height': lineHeight} = await this.getTextStyle();
            this.setData({
                ellipsis: height > parseFloat(lineHeight) * this.data.line,
                show: true
            });
        }
        catch (error) {
            console.error('文本折叠组件加载出错：', error);
        }
    },

    /**
     * 点击折叠/收起按钮
     */
    btnClick() {
        const currentExpand = this.data.currentExpand;
        this.setData({
            currentExpand: !currentExpand
        }, () => {
            this.triggerEvent('expand', {expand: !currentExpand});
        });
    }
});
